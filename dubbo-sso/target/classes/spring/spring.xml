<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


    <context:component-scan base-package="com.itcast.dubbo"></context:component-scan>

    <context:property-placeholder location="classpath*:*.properties"/>

    <!--config shrio filter defined in web.xml-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!-- override these for application-specific URLs if you like:-->
        <property name="loginUrl" value="/login.jsp"/>
        <property name="successUrl" value="/home.jsp"/>
        <property name="unauthorizedUrl" value="/unauthorized.jsp"/>
        <!-- The 'filters' property is not necessary since any declared javax.servlet.Filter bean  -->
        <!-- defined will be automatically acquired and available via its beanName in chain        -->
        <!-- definitions, but you can perform instance overrides or name aliases here if you like: -->
        <property name="filters">
            <util:map>
                <entry key="anAlias" value-ref="customerUserFilter"/>
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /admin/** = authc, roles[admin]
                /docs/** = authc, perms[document:read]
                /** = anon
            </value>
        </property>
    </bean>

    <!-- Define any javax.servlet.Filter beans you want anywhere in this application context.   -->
    <!-- They will automatically be acquired by the 'shiroFilter' bean above and made available -->
    <!-- to the 'filterChainDefinitions' property.  Or you can manually/explicitly add them     -->
    <!-- to the shiroFilter's 'filters' Map if desired. See its JavaDoc for more details.       -->
    <bean id="customerUserFilter" class="com.itcast.dubbo.shiro.filter.CustomerUserFilter">

    </bean>
    <bean id="customerAuthcationFilter" class="com.itcast.dubbo.shiro.filter.CustomerAuthenticationFilter">

    </bean>
    <bean name=""  class="com.itcast.dubbo.shiro.filter.CustomerAuthorizationFilter">

    </bean>


    <import resource="spring-shrio.xml"/>
    <import resource="spring-mvc.xml"/>

</beans>